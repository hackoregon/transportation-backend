#! /bin/bash

echo "Adding PostgreSQL / PostGIS package repository"
sudo cp postgis.list /etc/apt/sources.list.d/
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc \
  | sudo apt-key add -
echo "Adding UbuntuGIS Stable PPA"
sudo add-apt-repository ppa:ubuntugis/ppa
sudo apt-get update
echo "http://apt.postgresql.org/pub/repos/apt repository added!"
echo ""
echo "Installing Python, PostgreSQL and PostGIS packages"
sudo apt-get install -y \
  postgresql-9.6 \
  postgresql-autodoc \
  postgresql-client-9.6 \
  postgresql-contrib-9.6 \
  postgresql-doc-9.6 \
  postgresql-server-dev-9.6 \
  postgis \
  postgresql-9.6-postgis-2.3 \
  postgresql-9.6-postgis-2.3-scripts \
  postgresql-9.6-postgis-scripts \
  postgresql-9.6-pgrouting \
  postgresql-9.6-pgrouting-doc \
  postgresql-9.6-pgrouting-scripts \
  librasterlite2-dev \
  libspatialite-dev \
  rasterlite2-bin \
  spatialite-bin \
  udunits-bin \
  libudunits2-dev \
  gdal-bin \
  libgdal-dev \
  libgeos-dev \
  proj-bin \
  libproj-dev \
  python-dev \
  python3-dev \
  virtualenvwrapper

echo "Creating PostgreSQL superuser ${USER}."
echo "If you're already a PostgreSQL superuser you can ignore the error message."
sudo su -c "createuser -s ${USER}" postgres
echo "You are now a PostgreSQL super-user with ID '${USER}'."
echo "Creating a personal database for ${USER}."
echo "If you've already created the ${USER} database you can ignore the error message."
createdb -O ${USER} ${USER}
echo "Your personal database ${USER} has been created."
echo ""
echo "Creating all PostGIS extensions in your personal database."
echo "If you've already created the extensions you can ignore the error messages."
psql -c "CREATE EXTENSION postgis CASCADE;"
psql -c "CREATE EXTENSION postgis_topology CASCADE;"
psql -c "CREATE EXTENSION pgrouting CASCADE;"
psql -c "CREATE EXTENSION address_standardizer CASCADE;"
psql -c "CREATE EXTENSION address_standardizer_data_us CASCADE;"
psql -c "CREATE EXTENSION postgis_tiger_geocoder CASCADE;"
echo "Documenting database to ${USER}.html"
postgresql_autodoc -d ${USER} -t html
echo "Downloading gecoder database dump"
wget https://github.com/hackoregon/postgis-geocoder-test/releases/download/v1.5.0/geocoder.pgdump
echo "Restoring geocoder database - this will take a while"
sudo su postgres -c "pg_restore -C -d postgres geocoder.pgdump"
postgresql_autodoc -d geocoder  -t html
